"use client"
import React, { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'

// –Ü–∫–æ–Ω–∫–∞ —Å—Ç—Ä—ñ–ª–∫–∏, –∞–Ω–∞–ª–æ–≥ lucide-react
const ArrowUpRight = ({ className }) => (
	<svg
		xmlns='http://www.w3.org/2000/svg'
		width='24'
		height='24'
		viewBox='0 0 24 24'
		fill='none'
		stroke='currentColor'
		strokeWidth='2'
		strokeLinecap='round'
		strokeLinejoin='round'
		className={className}
	>
		<path d='M7 7h10v10' />
		<path d='M7 17 17 7' />
	</svg>
)

// –ü—Ä–∏–∫–ª–∞–¥–∏ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö —Ç–µ–º
const trendingTopics = [
	'–í–í–ü –£–∫—Ä–∞—ó–Ω–∏ 2024',
	'–Ü–Ω—Ñ–ª—è—Ü—ñ—è –∫–≤—ñ—Ç–µ–Ω—å 2025',
	'–ë–µ–∑—Ä–æ–±—ñ—Ç—Ç—è 2023 vs 2024',
	'–ü—Ä–æ–º–≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ Q1 2025',
]

export default function TestChat() {
	const [query, setQuery] = useState('')
	const [answer, setAnswer] = useState(null)
	const [loading, setLoading] = useState(false)
	const [showInitialContent, setShowInitialContent] = useState(true)

	// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–ø–∏—Ç—É
	const ask = async () => {
		if (!query.trim()) return
		setLoading(true)
		setShowInitialContent(false) // –•–æ–≤–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç, —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å

		// –Ü–º—ñ—Ç–∞—Ü—ñ—è –≤–∏–∫–ª–∏–∫—É API –¥–æ Convex + OpenAI
		// TODO: –ó–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π –≤–∏–∫–ª–∏–∫ Convex-—Ñ—É–Ω–∫—Ü—ñ—ó
		setTimeout(() => {
			setAnswer({
				text: `üîÆ –¢—É—Ç –∑'—è–≤–∏—Ç—å—Å—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å, –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞ LLM –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∞–Ω–∞–ª—ñ—Ç–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö –ø–æ –∑–∞–ø–∏—Ç—É: "${query}". –¶—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å —î —ñ–º—ñ—Ç–∞—Ü—ñ—î—é —ñ –±—É–¥–µ –∑–∞–º—ñ–Ω–µ–Ω–∞ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–±–æ—Ç–∏ –º–æ–¥–µ–ª—ñ. –í–æ–Ω–∞ –º–æ–∂–µ –≤–∫–ª—é—á–∞—Ç–∏ —Ç–µ–∫—Å—Ç, —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–∂–µ—Ä–µ–ª–∞.`,
				sources: [
					{ title: '–ó–≤—ñ—Ç –ø—Ä–æ –í–í–ü –£–∫—Ä–∞—ó–Ω–∏ –∑–∞ Q4 2023', url: '#' },
					{ title: '–ü—Ä–æ–≥–Ω–æ–∑ —ñ–Ω—Ñ–ª—è—Ü—ñ—ó –≤—ñ–¥ –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫—É', url: '#' },
					{ title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∏–Ω–∫—É –ø—Ä–∞—Ü—ñ', url: '#' },
				],
			})
			setLoading(false)
		}, 1200)
	}

	// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω
	const askNewQuestion = () => {
		setAnswer(null)
		setQuery('')
		setShowInitialContent(true)
	}

	// –í–∞—Ä—ñ–∞–Ω—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	const containerVariants = {
		hidden: { opacity: 0, y: 20 },
		visible: {
			opacity: 1,
			y: 0,
			transition: {
				staggerChildren: 0.1,
				duration: 0.5,
			},
		},
	}

	const itemVariants = {
		hidden: { opacity: 0, y: 20 },
		visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },
	}

	return (
		<div className='min-h-screen w-full bg-gradient-to-b from-slate-950 to-slate-900 text-white font-sans'>
			<div className='container mx-auto px-4 py-8 sm:py-16 flex flex-col items-center gap-10'>
				{/* –ê–Ω—ñ–º–æ–≤–∞–Ω–∞ –ø—Ä–∏—Å—É—Ç–Ω—ñ—Å—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É */}
				<AnimatePresence>
					{showInitialContent && (
						<motion.div
							key='initial-content'
							variants={containerVariants}
							initial='hidden'
							animate='visible'
							exit={{ opacity: 0, y: -20, transition: { duration: 0.3 } }}
							className='w-full max-w-3xl flex flex-col items-center gap-10 text-center'
						>
							<motion.h1
								variants={itemVariants}
								className='text-4xl sm:text-5xl font-extrabold tracking-tight'
							>
								–ó–∞–ø–∏—Ç–∞–π—Ç–µ –≤–∞—à—É <span className='text-teal-400'>–∞–Ω–∞–ª—ñ—Ç–∏–∫—É</span>
							</motion.h1>

							<motion.div variants={itemVariants} className='w-full'>
								<p className='text-slate-400 mb-4'>
									–û—Ç—Ä–∏–º–∞–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—ó –±–∞–∑–∏ –∑–Ω–∞–Ω—å –∫–æ–º–ø–∞–Ω—ñ—ó
								</p>
								<div className='flex flex-col sm:flex-row gap-2'>
									<input
										className='flex-grow text-base h-14 bg-slate-800/60 border border-slate-700 rounded-md px-4 placeholder:text-slate-400 focus:ring-2 focus:ring-teal-500 focus:outline-none transition-shadow duration-300'
										placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: '–Ø–∫—ñ –ø—Ä–æ–≥–Ω–æ–∑–∏ –ø–æ –í–í–ü –£–∫—Ä–∞—ó–Ω–∏ —É 2024 —Ä–æ—Ü—ñ?'"
										value={query}
										onChange={(e) => setQuery(e.target.value)}
										onKeyDown={(e) => e.key === 'Enter' && ask()}
									/>
									<button
										className='h-14 px-6 text-base bg-teal-600 hover:bg-teal-500 rounded-md font-semibold transition-colors duration-300 disabled:bg-slate-700 disabled:text-slate-400 disabled:cursor-not-allowed flex items-center justify-center'
										onClick={ask}
										disabled={loading || !query.trim()}
									>
										{loading ? '–ê–Ω–∞–ª—ñ–∑—É—î–º–æ...' : '–°–ø–∏—Ç–∞—Ç–∏'}
									</button>
								</div>
							</motion.div>

							<motion.div
								variants={itemVariants}
								className='flex flex-wrap gap-2 justify-center'
							>
								<span className='text-slate-300 text-sm mr-2'>
									–ü–æ–ø—É–ª—è—Ä–Ω—ñ —Ç–µ–º–∏:
								</span>
								{trendingTopics.map((topic) => (
									<button
										key={topic}
										onClick={() => {
											setQuery(topic)
										}}
										className='cursor-pointer backdrop-blur-md bg-slate-800/50 hover:bg-teal-600/80 rounded-full px-3 py-1 text-sm text-slate-200 hover:text-white transition-colors duration-300'
									>
										{topic}
									</button>
								))}
							</motion.div>
						</motion.div>
					)}
				</AnimatePresence>

				{/* –ê–Ω—ñ–º–æ–≤–∞–Ω–∞ –ø–æ—è–≤–∞ –ø–∞–Ω–µ–ª—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ */}
				<AnimatePresence>
					{answer && (
						<motion.div
							key='answer-panel'
							initial={{ opacity: 0, y: 20 }}
							animate={{ opacity: 1, y: 0 }}
							exit={{ opacity: 0, transition: { duration: 0.3 } }}
							transition={{ duration: 0.5, delay: 0.2 }}
							className='max-w-4xl w-full'
						>
							{/* –ö–∞—Ä—Ç–∫–∞ –∑ –∑–∞–ø–∏—Ç–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */}
							<div className='mb-6'>
								<h2 className='text-slate-400 text-lg'>–í–∞—à –∑–∞–ø–∏—Ç:</h2>
								<p className='text-xl font-medium text-teal-300'>"{query}"</p>
							</div>

							{/* –ö–∞—Ä—Ç–∫–∞ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–¥—é */}
							<div className='bg-slate-800/60 border border-slate-700 rounded-lg shadow-2xl shadow-teal-900/10'>
								<div className='p-6'>
									<div className='prose prose-invert max-w-none prose-p:text-slate-300 prose-headings:text-teal-400'>
										<p>{answer.text}</p>
									</div>
								</div>
							</div>

							{/* –î–∂–µ—Ä–µ–ª–∞ */}
							<div className='mt-6'>
								<h3 className='text-slate-400 mb-2'>–î–∂–µ—Ä–µ–ª–∞:</h3>
								<div className='grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-3'>
									{answer.sources.map((source, index) => (
										<a
											href={source.url}
											key={index}
											target='_blank'
											rel='noopener noreferrer'
											className='block p-4 bg-slate-800/70 border border-slate-700 rounded-md hover:bg-slate-700/80 hover:border-teal-600 transition-all duration-300'
										>
											<p className='font-semibold text-slate-200 truncate'>
												{source.title}
											</p>
										</a>
									))}
								</div>
							</div>

							{/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç—É */}
							<button
								className='mt-8 text-teal-400 hover:text-teal-300 flex items-center transition-colors duration-300'
								onClick={askNewQuestion}
							>
								–ó–∞–¥–∞—Ç–∏ –Ω–æ–≤–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è <ArrowUpRight className='w-4 h-4 ml-1' />
							</button>
						</motion.div>
					)}
				</AnimatePresence>

				{/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */}
				<AnimatePresence>
					{loading && (
						<motion.div
							key='loader'
							initial={{ opacity: 0 }}
							animate={{ opacity: 1 }}
							exit={{ opacity: 0 }}
							className='flex flex-col items-center gap-2 text-slate-400'
						>
							<svg
								className='animate-spin h-8 w-8 text-teal-500'
								xmlns='http://www.w3.org/2000/svg'
								fill='none'
								viewBox='0 0 24 24'
							>
								<circle
									className='opacity-25'
									cx='12'
									cy='12'
									r='10'
									stroke='currentColor'
									strokeWidth='4'
								></circle>
								<path
									className='opacity-75'
									fill='currentColor'
									d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'
								></path>
							</svg>
							<span>–®—É–∫–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É –±–∞–∑—ñ –∑–Ω–∞–Ω—å...</span>
						</motion.div>
					)}
				</AnimatePresence>
			</div>
		</div>
	)
}
